on:
  workflow_call:
    inputs:
      push:
        type: boolean
        description: push to dockerhub
      pr_number:
        type: string
        description: PR number for RC tag generation
        required: false
      version_tag:
        type: string
        description: Version tag for the image
        required: false

jobs:
  build-docker-image:
    name: Build Component Image
    runs-on: ubuntu-latest
    outputs:
      glassflow-operator-amd64: ${{ steps.gen-output.outputs.glassflow-operator-amd64 }}
      glassflow-operator-arm64: ${{ steps.gen-output.outputs.glassflow-operator-arm64 }}
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        platform:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Build & push Docker image
        uses: docker/build-push-action@v6
        id: build-arch-image
        with:
          platforms: ${{ matrix.platform.os }}/${{ matrix.platform.arch }}
          context: .
          file: Dockerfile
          push: ${{ inputs.push }}
          provenance: false
          outputs: push-by-digest=true,type=image
          tags: |
            ghcr.io/glassflow/glassflow-etl-k8s-operator
      - name: Generate output
        id: gen-output
        run: echo "glassflow-operator-${ARCH}=$DIGEST" >> "$GITHUB_OUTPUT"
        env:
          ARCH: ${{ matrix.platform.arch }}
          DIGEST: ${{ steps.build-arch-image.outputs.digest }}

  push-docker-manifest:
    name: Push Operator Image
    runs-on: ubuntu-latest
    permissions:
      packages: write
    if: ${{ inputs.push }}
    needs: build-docker-image
    steps:
      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=sha,prefix=,format=long
            type=raw,value=main,enable=${{ github.ref_name == 'main' }}
            type=raw,value=${{ inputs.version_tag }},enable=${{ inputs.version_tag != '' }}
            type=raw,value=rc-PR-${{ inputs.pr_number }},enable=${{ inputs.pr_number != '' }}
      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Push multiarch manifest
        run: |
          echo "$TAGS" | while IFS= read -r TAG; do
            docker manifest create "$REPOSITORY:$TAG" \
              --amend "$REPOSITORY@$AMD64_DIGEST" \
              --amend "$REPOSITORY@$ARM64_DIGEST"
            docker manifest push "$REPOSITORY:$TAG"
          done
        env:
          AMD64_DIGEST: ${{ needs.build-docker-image.outputs.glassflow-operator-amd64 }}
          ARM64_DIGEST: ${{ needs.build-docker-image.outputs.glassflow-operator-arm64 }}
          TAGS: ${{ steps.meta.outputs.tags }}
          REPOSITORY: ghcr.io/glassflow/glassflow-etl-k8s-operator
