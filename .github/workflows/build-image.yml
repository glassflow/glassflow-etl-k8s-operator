on:
  workflow_call:
    inputs:
      push:
        type: boolean
        description: push to dockerhub
      pr_number:
        type: string
        description: PR number for RC tag generation
        required: false
      version_tag:
        type: string
        description: Version tag for the image
        required: false

jobs:
  build-docker-image:
    name: Build Multi-Platform Image
    runs-on: ubuntu-latest
    outputs:
      image-digest: ${{ steps.build.outputs.digest }}
      image-metadata: ${{ steps.build.outputs.metadata }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Build & push multi-platform image
        uses: docker/build-push-action@v6
        id: build
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          file: Dockerfile
          push: ${{ inputs.push }}
          provenance: false
          cache-from: type=gha,scope=buildx
          cache-to: type=gha,mode=max,scope=buildx
          tags: |
            ghcr.io/glassflow/glassflow-etl-k8s-operator

  tag-and-push:
    name: Tag and Push Multi-Platform Image
    runs-on: ubuntu-latest
    permissions:
      packages: write
    if: ${{ inputs.push }}
    needs: build-docker-image
    steps:
      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=sha,prefix=,format=long
            type=raw,value=main,enable=${{ github.ref_name == 'main' }}
            type=raw,value=${{ inputs.version_tag }},enable=${{ inputs.version_tag != '' }}
            type=raw,value=rc-PR-${{ inputs.pr_number }},enable=${{ inputs.pr_number != '' }}
      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Tag and push multi-platform image
        run: |
          echo "$TAGS" | while IFS= read -r TAG; do
            docker buildx imagetools create \
              --tag "$REPOSITORY:$TAG" \
              "$REPOSITORY@${{ needs.build-docker-image.outputs.image-digest }}"
          done
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          REPOSITORY: ghcr.io/glassflow/glassflow-etl-k8s-operator
