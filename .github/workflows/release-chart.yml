name: Release Operator Chart

on:
  workflow_call:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        type: string
    outputs:
      new_version:
        description: 'New Helm chart version'
        value: ${{ jobs.calculate-version.outputs.new_version }}

jobs:
  calculate-version:
    uses: ./.github/workflows/calculate-version.yml
    with:
      version_file: VERSION_CHART
      version_type: ${{ inputs.version_type }}

  upload-chart:
    needs: [calculate-version]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
        CHARTS_REPO: glassflow/charts
        OPERATOR_CHART_NAME: glassflow-operator
        GCS_BUCKET: operator-charts
        PROJECT_ID: glassflow-dataforge
        SERVICE_ACCOUNT: 'github-ci-cd@glassflow-dataforge.iam.gserviceaccount.com'
        WORKLOAD_IDENTITY_PROVIDER: 'projects/585858172927/locations/global/workloadIdentityPools/github/providers/github-repo-provider'

    steps:
      - name: Checkout operator repo
        uses: actions/checkout@v5

      - name: Read operator version
        id: operator-version
        run: |
          if [ -f "VERSION" ]; then
            OPERATOR_VERSION=$(cat VERSION | tr -d ' \t\n\r')
          else
            OPERATOR_VERSION="0.0.0"
          fi
          
          echo "Operator version: $OPERATOR_VERSION"
          echo "operator-version=$OPERATOR_VERSION" >> $GITHUB_OUTPUT

      - name: Generate and package chart
        run: |
          make package-chart \
            VERSION=${{ needs.calculate-version.outputs.new_version }} \
            APP_VERSION=${{ steps.operator-version.outputs.operator-version }}
          
          if [ ! -f dist/charts/*.tgz ]; then
            echo "❌ Chart package not found"
            exit 1
          fi
          echo "✅ Chart package generated successfully"

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
          project_id: ${{ env.PROJECT_ID }}

      - name: Upload chart to GCS
        id: upload-chart
        run: |
          # Get the actual chart filename
          CHART_FILE=$(basename dist/charts/*.tgz)
          echo "chart_filename=$CHART_FILE" >> $GITHUB_OUTPUT
          
          # Upload with proper filename
          gsutil cp dist/charts/*.tgz gs://${{ env.GCS_BUCKET }}/$CHART_FILE

          echo "✅ Chart uploaded successfully: gs://${{ env.GCS_BUCKET }}/$CHART_FILE"
    
      - name: Clean up
        run: |
          rm -rf dist chart
          echo "🧹 Local files cleaned up"

      - name: Trigger charts repo workflow
        run: |
          echo "🚀 Triggering workflow in charts repository..."
          gh api repos/${{ env.CHARTS_REPO }}/dispatches \
            -f event_type="update-chart" \
            -f client_payload='{
              "chart_name": "${{ env.OPERATOR_CHART_NAME }}",
              "chart_version": "${{ needs.calculate-version.outputs.new_version }}",
              "operator_version": "${{ steps.operator-version.outputs.operator-version }}",
              "gs_url": "gs://${{ env.GCS_BUCKET }}/${{ steps.upload-chart.outputs.chart_filename }}",
              "source_repo": "${{ github.repository }}"
            }'

      - name: Update VERSION_CHART file
        run: |
          echo "${{ needs.calculate-version.outputs.new_version }}" > VERSION_CHART
          echo "✅ VERSION_CHART file updated to: ${{ needs.calculate-version.outputs.new_version }}"
          cat VERSION_CHART

      - name: Commit version changes
        run: |
          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Add version changes
          git add VERSION_CHART
          
          # Commit the version bump
          git commit -m "chore: bump version to ${{ needs.calculate-version.outputs.new_version }}

          - Helm chart version: ${{ needs.calculate-version.outputs.new_version }}
          - VERSION_CHART file updated" || echo "No changes to commit"
          
          # Push the changes
          git push origin ${{ github.ref }}